class solarcalc{maxM2=1e3;panelEfficiency=.15;sunHoursPerYear=5800;calculateFactor=950.1;constructor(parameters){this.updateValues(),this.calculate(this.m2,this.rooftype),this.clearErrors(),jQuery(".solarcalc #m2-input").on("change",e=>{this.updateValues(),this.clearErrors(),this.m2<1||this.m2>1e3?jQuery(".solarcalc #m2-error").text(`Der Wert muss zwischen 1 und ${this.maxM2} m2 liegen.`,"solarcalc"):this.calculate(this.m2,this.rooftype)}),jQuery(".solarcalc #rooftype").on("change",e=>{this.updateValues(),this.clearErrors(),this.calculate(this.m2,this.rooftype)}),jQuery(".solarcalc #sc-rooftype-icons a").on("click",e=>{this.changeHouseType(e)}),jQuery(".solarcalc #sc-rooftype-icons a").on("keypress",e=>{13==e.which&&this.changeHouseType(e)})}changeHouseType(e){jQuery(".solarcalc #sc-rooftype-icons a").removeClass("active"),jQuery(e.currentTarget).addClass("active"),jQuery(".solarcalc #rooftype").val(jQuery(e.currentTarget).data("type")),jQuery(".solarcalc #rooftype").change()}calculate(m2,rooftype){let kwpPerM2=0,costPerM2=0,sizeModule=1.65,factor=this.calculateFactor;switch(rooftype){case"flat":kwpPerM2=.225,costPerM2=360;break;case"steep":kwpPerM2=.22,costPerM2=345,factor*=.95;break;case"indach":kwpPerM2=.197,costPerM2=870}let kwpTotal=kwpPerM2*m2,totalInvest=9500;totalInvest=(totalInvest+costPerM2*m2).toFixed(0);let kWh=kwpTotal*factor,batt=0;kwpTotal<=10&&(batt=4500),kwpTotal>10&&(batt=6500),this.countUp(".output-con #sc-power .number",kwpTotal),this.countUp(".output-con #sc-invest .number",totalInvest,"currency"),this.countUp(".output-con #sc-invest-batt .number",batt,"currency"),this.countUp(".output-con #sc-modules .number",Math.round(m2/1.65)),this.countUp(".output-con #sc-energy .number",kWh)}updateValues(){this.m2=parseFloat(jQuery(".solarcalc #m2-input").val()),this.rooftype=jQuery(".solarcalc #rooftype").val()}clearErrors(){jQuery(".solarcalc .error-con").text("")}countUp(element,newVal,type=""){let oldVal=jQuery(element).val();oldVal=""===oldVal?0:parseInt(oldVal),newVal=parseFloat(newVal).toFixed(2),console.log(newVal);const interval=setInterval(()=>{const increment=newVal/30;oldVal+=increment;const number=Math.floor(oldVal);"currency"===type?jQuery(element).text(number.toLocaleString("de-CH",{style:"currency",currency:"CHF"})):jQuery(element).text(number),newVal<=oldVal&&clearInterval(interval)},20)}}jQuery(document).ready(()=>{const solarcalculator=new solarcalc});